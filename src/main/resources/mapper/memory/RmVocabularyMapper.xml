<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.csl.memory.dao.RmVocabularyMapper" >
  <resultMap id="BaseResultMap" type="cn.csl.memory.entity.RmVocabulary" >
    <result column="id" property="id" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="wrods" property="wrods" jdbcType="VARCHAR" />
    <result column="memoryDate" property="memoryDate" jdbcType="TIMESTAMP" />
    <result column="memoryFlag" property="memoryFlag" jdbcType="INTEGER" />
    <result column="reviewNum" property="reviewNum" jdbcType="INTEGER" />
    <result column="errorNum" property="errorNum" jdbcType="INTEGER" />
    <result column="exampleSentence" property="exampleSentence" jdbcType="VARCHAR" />
    <result column="exampleSentenceTranslation" property="exampleSentenceTranslation" jdbcType="VARCHAR" />
    <result column="phonogram" property="phonogram" jdbcType="VARCHAR" />
    <result column="imgUrl" property="imgUrl" jdbcType="VARCHAR" />
    <result column="rootTranslation" property="rootTranslation" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
   id, state, createTime,
      content, wrods, memoryDate,
      memoryFlag, reviewNum, errorNum,
      exampleSentence, exampleSentenceTranslation,
      phonogram, imgUrl, rootTranslation
  </sql>
  <sql id="Base_name" >
    rm_vocabulary
  </sql>
  <sql id="orderAttr" >
    id
  </sql>
  <insert id="insert" parameterType="cn.csl.memory.entity.RmVocabulary" keyProperty="id" useGeneratedKeys="true">
    insert into rm_vocabulary (id, state, createTime, 
      content, wrods, memoryDate, 
      memoryFlag, reviewNum, errorNum, 
      exampleSentence, exampleSentenceTranslation, 
      phonogram, imgUrl, rootTranslation
      )
    values (#{id,jdbcType=BIGINT}, #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=VARCHAR}, #{wrods,jdbcType=VARCHAR}, #{memoryDate,jdbcType=TIMESTAMP}, 
      #{memoryFlag,jdbcType=INTEGER}, #{reviewNum,jdbcType=INTEGER}, #{errorNum,jdbcType=INTEGER}, 
      #{exampleSentence,jdbcType=VARCHAR}, #{exampleSentenceTranslation,jdbcType=VARCHAR}, 
      #{phonogram,jdbcType=VARCHAR}, #{imgUrl,jdbcType=VARCHAR}, #{rootTranslation,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.csl.memory.entity.RmVocabulary" >
    update <include refid="Base_name" />
    set
    content = #{content,jdbcType=VARCHAR},
    wrods = #{wrods,jdbcType=VARCHAR},
    memoryDate = #{memoryDate,jdbcType=TIMESTAMP},
    memoryFlag = #{memoryFlag,jdbcType=INTEGER},
    reviewNum = #{reviewNum,jdbcType=INTEGER},
    errorNum = #{errorNum,jdbcType=INTEGER},
    exampleSentence =  #{exampleSentence,jdbcType=VARCHAR},
    exampleSentenceTranslation =  #{exampleSentenceTranslation,jdbcType=VARCHAR},
    phonogram =  #{phonogram,jdbcType=VARCHAR},
    imgUrl =  #{imgUrl,jdbcType=VARCHAR},
    starootTranslationte = #{rootTranslation,jdbcType=VARCHAR},
    state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>



  <delete id="deleteByPrimaryKey"  parameterType="java.lang.Long" >
    delete from <include refid="Base_name" />
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from <include refid="Base_name" />
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getCount" resultType="java.lang.Long">
    select
    count(*)
    from <include refid="Base_name" />
    where state = 1
    <if test="tableUploadUtil.sql != null and tableUploadUtil.sql != ''">
      ${ tableUploadUtil.sql}
    </if>
    <if test="tableUploadUtil.searchdetail != null and tableUploadUtil.searchdetail != ''">
      and ${ tableUploadUtil.searchdeAttribute} LIKE CONCAT(CONCAT('%', #{tableUploadUtil.searchdetail,jdbcType=VARCHAR}),'%')
    </if>
  </select>
  <select id="listPageObjs" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from <include refid="Base_name" />
    where state = 1
    <if test="tableUploadUtil.sql != null and tableUploadUtil.sql != ''">
      ${ tableUploadUtil.sql}
    </if>
    <if test="tableUploadUtil.searchdetail != null and tableUploadUtil.searchdetail != ''">
      and ${tableUploadUtil.searchdeAttribute} LIKE CONCAT(CONCAT('%', #{tableUploadUtil.searchdetail,jdbcType=VARCHAR}),'%')
    </if>
    ORDER BY <include refid="orderAttr" /> DESC
    limit #{tableUploadUtil.start},#{tableUploadUtil.length}
  </select>
  <select id="listByAttribute" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from <include refid="Base_name" />
    where ${attribute} = #{checkVal,jdbcType=VARCHAR} and state = #{state,jdbcType=INTEGER}
    ORDER BY <include refid="orderAttr" /> DESC
  </select>
  <select id="listByAttrValueMap" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from <include refid="Base_name" />
    where state = #{state,jdbcType=INTEGER}  ${attrValueMap}
    ORDER BY <include refid="orderAttr" /> DESC
  </select>
</mapper>